# v.1.0.7
kind: Service
apiVersion: v1
metadata:
  name: sowl-prod
spec:
  externalTrafficPolicy: Local
  selector:
    app: sowl-prod
  ports:
  - name: "nginx"
    protocol: TCP
    port: 80
  type: LoadBalancer # You may want to replace LoadBalancer with Ingress: just comment this line and uncomment Ingress definition below 
# ---
# apiVersion: extensions/v1beta1
# kind: Ingress
# metadata:
#  annotations:
#    kubernetes.io/ingress.class: nginx-sowl
#    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
#    nginx.ingress.kubernetes.io/ssl-redirect: 'true'
#    nginx.ingress.kubernetes.io/lb-method: round_robin
#  name: sowl-prod
# spec:
#  tls:
#    - secretName: {{ KUBE_INGRESS_HTTPS_SECRET_NAME }}
#  rules:
#    - host: {{ CI_COMMIT_REF_SLUG }}.{{ KUBE_INGRESS_DOMAIN }} # Replace with correct cluster FQDN
#      http:
#        paths:
#          - path: /
#            backend:
#              serviceName: sowl-prod
#              servicePort: 80
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: sowl-prod
  # namespace: {{ KUBE_NAMESPACE }}
spec:
  replicas: {{ PROD_REPLICAS_COUNT }}
  template:
    metadata:
      labels:
        app: sowl-prod
    spec:
      volumes:
      - name: sowl-dev-prod
        emptyDir: {}
      # - name: cloudsql-instance-credentials
      #   secret:
      #     secretName: cloudsql-instance-credentials
      - name: sowl-env-prod
        configMap:
          name: sowl-env-prod
          items:
            - key: .env.kubernetes
              path: .env.kubernetes
      - name: sowl-db-prod
        configMap:
          name: sowl-db-prod
          items:
            - key: database.php
              path: database.php
      initContainers:
      - name: init
        image: {{ CONTAINER_RELEASE_IMAGE }}
        env:
        - name: CONTAINER_ROLE
          value: "init"
        - name: SRV_ENV
          value: "init"
        volumeMounts:
        - name: sowl-dev-prod
          mountPath: /var/www/html
        - name: sowl-env-prod # place of env file
          mountPath: /.env.kubernetes
          subPath: .env.kubernetes
          readOnly: true
        - name: sowl-db-prod # place of env file
          mountPath: /database.php
          subPath: database.php
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      containers:
###############################################################---sowl-php-fpm---######################################################
      - name: php-fpm
        image: {{ CONTAINER_RELEASE_IMAGE }}
        env:
        - name: CONTAINER_ROLE
          value: "app"
        ports:
        - containerPort: 9000
        volumeMounts:
        - name: sowl-dev-prod
          mountPath: /var/www/html
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
###############################################################---sowl-queue---######################################################
      - name: queue
        image: {{ CONTAINER_RELEASE_IMAGE }}
        env:
        - name: CONTAINER_ROLE
          value: "queue"
        - name: SRV_ENV
          value: "sidecar"
        volumeMounts:
        - name: sowl-dev-prod
          mountPath: /var/www/html
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File    
###############################################################---sowl-nginx---######################################################
      - name: nginx
        image: gcr.io/sowl-tech/sowl-nginx/nginx:v8.3
        command: ["nginx"]
        args: ["-g", "daemon off;"]
        ports:
        - containerPort: 80
        volumeMounts:
        - name: sowl-dev-prod
          mountPath: /var/www/html
###############################################################---redis---######################################################
      - name: redis
        image: redis:5.0.6-alpine3.10
        ports:
        - containerPort: 6379
      restartPolicy: Always
---
###############################################################---env-db file---#####################################################
apiVersion: v1
kind: ConfigMap
metadata:
  name: sowl-db-prod
  # namespace: {{ KUBE_NAMESPACE }}
data:
  database.php: |
    <?php
    return [
        'fetch' => PDO::FETCH_CLASS,
        'default' => env('DB_CONNECTION', 'mysql'),
        'connections' => [

            'sqlite' => [
                'driver'   => 'sqlite',
                'database' => storage_path().'/database.sqlite',
                'prefix'   => '',
            ],

            'mysql' => [
                'driver'    => 'mysql',
                'write'     => [
                    'host' => env('DB_HOST_MASTER', 'sowl-main-db.sowl.svc.cluster.local')
                ],
                'read' => [
                    [
                        'host' => env('DB_HOST_REPLICA', 'sowl-main-db-rp.sowl.svc.cluster.local')
                    ],
                ],
                'database'  => env('DB_DATABASE', '{{ MYSQL_PROD_DATABASE }}'),
                'username'  => env('DB_USERNAME', '{{ MYSQL_PROD_USERNAME }}'),
                'password'  => env('DB_PASSWORD', '{{ MYSQL_PROD_PASSWORD }}'),
                'charset'   => 'utf8',
                'collation' => 'utf8_general_ci',
                'prefix'    => '',
                'strict'    => false,
            ],

            'migration_db' => [
                'driver'    => 'mysql',
                'host'      => env('DB_HOST', '127.0.0.1'),
                'database'  => env('DB_DATABASE', '{{ MYSQL_PROD_DATABASE }}'),
                'username'  => env('DB_USERNAME', '{{ MYSQL_PROD_USERNAME }}'),
                'password'  => env('DB_PASSWORD', '{{ MYSQL_PROD_PASSWORD }}'),
                'charset'   => 'utf8',
                'collation' => 'utf8_general_ci',
                'prefix'    => '',
                'strict'    => false,
            ],

        ],
        'migrations' => 'migrations',
        'redis' => [

            'cluster' => false,

            'default' => [
                'host'     => env("REDIS_HOST", "127.0.0.1"),
                'port'     => 6379,
                'database' => 0,
                'password' => env('REDIS_AUTH', '{{ PROD_QUEUE_REDIS_PASS }}'),
            ],

            'shared' => [
                'host'     => env('REDIS_SHARED_HOST'),
                'port'     => env('REDIS_SHARED_PORT'),
                'database' => 0,
                'password' => env('REDIS_SHARED_AUTH', null)
            ],

            'queue' => [
                'host'     => env('REDIS_QUEUE_HOST', '127.0.0.1'),
                'port'     => env('REDIS_QUEUE_PORT', 6379),
                'database' => 0,
                'password' => env('REDIS_QUEUE_AUTH', '{{ PROD_QUEUE_REDIS_PASS }}')
            ],

        ],

    ];