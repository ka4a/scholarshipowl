apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: {{ .Values.app }}-app
  labels:
    app: {{ .Values.app }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  selector:
   matchLabels:
    app: {{ .Values.app }}
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: {{ .Values.updateStrategy.type }}
  template:
    metadata:
      labels:
        app: {{ .Values.app }}
        release: {{ .Release.Name }}
    spec:
      initContainers:
      containers:
      - name: {{ .Values.containers.nginx.name | quote }}
        image: "{{ .Values.containers.nginx.repository }}:{{ .Values.containers.nginx.tag }}"
        imagePullPolicy: {{ .Values.containers.nginx.pullPolicy | quote }}
        ports:
          - containerPort: {{ .Values.containers.nginx.httpPort }}
{{- if .Values.productionBuild }}
        livenessProbe:
{{ toYaml .Values.livenessProbe | indent 10 }}
        readinessProbe:
{{ toYaml .Values.readinessProbe | indent 10 }}
{{- end }}
        volumeMounts:
        - name: {{ .Values.volume.name }}
          mountPath: {{ .Values.volume.path }}
      - name: {{ .Values.containers.phpfpm.name | quote }}
        image: "{{ .Values.containers.phpfpm.repository }}:{{ .Values.containers.phpfpm.tag }}"
        imagePullPolicy: {{ .Values.containers.phpfpm.pullPolicy | quote }}
        ports:
          - containerPort: {{ .Values.containers.phpfpm.port }}
        volumeMounts:
        - name: {{ .Values.volume.name }}
          mountPath: {{ .Values.volume.path }}
      volumes:
      - name: {{ .Values.volume.name }}
        emptyDir: {}
{{- if .Values.productionBuild }}
      nodeSelector:
{{ toYaml .Values.nodeSelector.prod | indent 8 }}
{{- else }}
      nodeSelector:
{{ toYaml .Values.nodeSelector.dev | indent 8 }}
{{- end }}
