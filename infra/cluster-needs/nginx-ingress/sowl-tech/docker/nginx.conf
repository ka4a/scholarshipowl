worker_processes 1;
worker_rlimit_nofile 10000;
pid /run/nginx.pid;

# only log critical errors
error_log /proc/self/fd/2 crit;

events {
    worker_connections 4024;
    multi_accept on;
    use epoll;
}

http {
    # cache informations about FDs, frequently accessed files
    # can boost performance, but you need to test those values
    open_file_cache max=200000 inactive=20s; 
    open_file_cache_valid 30s; 
    open_file_cache_min_uses 2;
    open_file_cache_errors on;
    
    include mime.types;
    default_type application/octet-stream;
    sendfile on;
    # don't buffer data sent, good for small data bursts in real time
    tcp_nodelay on;
    keepalive_timeout 10;
    # Number of requests a client can make over the keep-alive connection.
    keepalive_requests 100;
    # Causes nginx to attempt to send its HTTP response head in one packet,  instead of using partial frames.
    tcp_nopush on;
    # Allow the server to close the connection after a client stops responding. 
    reset_timedout_connection on;
    # If the client stops reading data, free up the stale client connection after this much time.
    send_timeout 2;

    client_max_body_size 1m;

    # Compression.
    gzip on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml;
    gzip_disable "msie6";


    # limit the number of connections per single IP
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:50m;

    # limit the number of requests for a given session
    limit_req_zone $binary_remote_addr zone=req_limit_per_ip:50m rate=5r/s;

    # if the request body size is more than the buffer size, then the entire (or partial)
    # request body is written into a temporary file
    client_body_buffer_size  128k;

    # headerbuffer size for the request header from client -- for testing environment
    client_header_buffer_size 1m;

    # maximum number and size of buffers for large headers to read from client request
    large_client_header_buffers 4 8k;

    # read timeout for the request body from client -- for testing environment
    client_body_timeout   1m;

    # how long to wait for the client to send a request header -- for testing environment
    client_header_timeout 1m;

    server {
        listen 8080 default_server;
        server_tokens off;
        access_log /proc/self/fd/2 combined;

        root /var/www/html;
        index index.html index.htm index.nginx-debian.html;

        limit_conn conn_limit_per_ip 50;
        limit_req zone=req_limit_per_ip burst=10 nodelay;

        server_name _;

        location / {
            index index.html;
            return 404;
        }

        location /healthz {
			access_log off;
			return 200;
		}

    }
}
