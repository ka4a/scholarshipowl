user www-data;
worker_processes 2;
worker_rlimit_nofile 10000;
pid /run/nginx.pid;

events {
    worker_connections 2024;
    multi_accept on;
    use epoll;
}

http {
    include mime.types;
    default_type application/octet-stream;
    sendfile on;
    keepalive_timeout 60;
    # Number of requests a client can make over the keep-alive connection.
    keepalive_requests 1000;
    # Causes nginx to attempt to send its HTTP response head in one packet,  instead of using partial frames.
    tcp_nopush on;
    # Allow the server to close the connection after a client stops responding. 
    reset_timedout_connection on;
    # Send the client a "request timed out" if the body is not loaded by this time.
    client_body_timeout 10;
    # If the client stops reading data, free up the stale client connection after this much time.
    send_timeout 5;

    client_max_body_size 50m;
    client_body_buffer_size 128k;

    # Compression.
    gzip on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml;
    gzip_disable "msie6";

    server {
        listen 80 default_server;

        root /var/www/html/public;
        index index.php index.html index.htm index.nginx-debian.html;

        server_name app.scholarship.app;

        location / {
            server_tokens off;
            try_files $uri $uri/ /index.php?$query_string;
        }

        location ~* \.(jpg|jpeg|gif|png|css|js|ico|xml)$ {
            access_log        off;
            log_not_found     off;
            expires           360d;
        }

        location ~ /\. {
            access_log off;
            log_not_found off; 
            deny all;
        }

        location ~ \.php$ {
            server_tokens off;
            fastcgi_split_path_info ^(.+\.php)(/.+)$;

            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_pass 127.0.0.1:9000;
        }
    }
}
